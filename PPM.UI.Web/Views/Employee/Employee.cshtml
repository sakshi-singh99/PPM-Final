@model PPM_Model.EmployeeModel
@{
    ViewBag.Title = "Employee";
}

<h2>Employee</h2>
<style>
    .error {
        color: red;
        font: bold;
    }

    .form {
        margin: 20px;
    }

    body {
        color: black;
        background-image: url('../../Content/themes/base/images/Allbg.jpg');
        background-size: cover;
    }

    label {
        width: 230px;
        height: 25px;
        display: inline-block;
        /*text-align:right;*/
        /* margin-right:0%;
        margin-left:0%;*/
    }

    .container {
        text-align: center;
    }
</style>


@*<h3><b style="color:red"> Welcome </b></h3>*@

@using (Html.BeginForm("AddEmployee", "Employee", FormMethod.Post))
{
    <body>
        <div class="container">
            <form>
                <div class="form-group">
                    @Html.HiddenFor(x => x.EmpId, new { @class = "form-control" })
                    <label>First Name</label>
                    @Html.ValidationMessageFor(x => x.EmpFirstName, "", new { @class = "error" })
                    @*@Html.LabelFor(x => x.EmpFirstName, new { @class = "form-cotrol" })*@
                    @Html.EditorFor(x => x.EmpFirstName)
                </div>
                <div class="form-group">
                    <label>Last Name</label>
                    @Html.ValidationMessageFor(x => x.EmpLastName, "", new { @class = "error" })
                    @*@Html.LabelFor(x => x.EmpLastName, new { @class = "form-control" })*@
                    @Html.EditorFor(x => x.EmpLastName)
                </div>
                <div class="form-group">
                    <label>Email</label>
                    @Html.ValidationMessageFor(x => x.EmpEmail, "", new { @class = "error" })
                    @*@Html.LabelFor(x => x.EmpEmail, new { @class = "form-control" })*@
                    @Html.EditorFor(x => x.EmpEmail)
                </div>
                <div class="form-group">
                    <label>Password</label>
                    @Html.ValidationMessageFor(x => x.EmpPassword, "", new { @class = "error" })
                    @*@Html.LabelFor(x => x.EmpPassword, new { @class = "form-control" })*@
                    @Html.EditorFor(x => x.EmpPassword)
                </div>
                <div class="form-group">
                    <label>Address</label>
                    @Html.ValidationMessageFor(x => x.EmpAddress, "", new { @class = "error" })
                    @*@Html.LabelFor(x => x.EmpAddress, new { @class = "form-control" })*@
                    @Html.EditorFor(x => x.EmpAddress)
                </div>
                <div class="form-group">
                    <label>Mobile</label>
                    @Html.ValidationMessageFor(x => x.EmpMobile, "", new { @class = "error" })
                    @*@Html.LabelFor(x => x.EmpMobile,new { @class = "form-control" })*@
                    @Html.EditorFor(x => x.EmpMobile)
                </div>
                <div class="form-group">
                    <label>Role Name</label>
                    @Html.ValidationMessageFor(x => x.EmpRoleId, "", new { @class = "error" })
                    @*@Html.LabelFor(x => x.EmpRoleId)*@
                    @Html.DropDownListFor(x => x.EmpRoleId, ViewBag.EmployeeModel as SelectList, "--Select--", new { @style = "width: 180px ;height:30px" })
                    @*@Html.EditorFor(x => x.EmpRoleId, new { @class = "form-cotrol" })*@
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <button type="reset" class="btn btn-danger">Reset</button>
                </div>
                <div>
                    <a href="@Url.Action("EmployeeList")" class="btn btn-primary">Back To Employee</a>
                </div>
            </form>
        </div>
    </body>

}
